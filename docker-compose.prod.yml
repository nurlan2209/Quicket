# docker-compose.prod.yml
version: '3.8'

services:
  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: quicket_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/ssl/certs
    depends_on:
      - frontend
      - backend
    networks:
      - quicket_network
    restart: unless-stopped

  postgres:
    environment:
      POSTGRES_DB: quicket_prod
      POSTGRES_USER: quicket_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-strong_password_here}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    environment:
      - DATABASE_URL=postgresql://quicket_user:${POSTGRES_PASSWORD:-strong_password_here}@postgres:5432/quicket_prod
      - SECRET_KEY=${SECRET_KEY:-your_production_secret_key}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your_production_jwt_secret}
      - FLASK_ENV=production
    ports:
      - "5000"
    volumes: []

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - VITE_API_URL=${VITE_API_URL:-http://localhost}
    ports:
      - "3000"
    volumes: []
    environment: []

volumes:
  postgres_prod_data:
    driver: local